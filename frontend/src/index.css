import React, { useState } from 'react';

interface LoginProps {
  onLogin: (userData: any) => void;
}

const Login: React.FC<LoginProps> = ({ onLogin }) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [showPassword, setShowPassword] = useState(false);
  const [rememberMe, setRememberMe] = useState(false);
  const [error, setError] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [showForgotPassword, setShowForgotPassword] = useState(false);
  const [showTerms, setShowTerms] = useState(false);
  const [showPrivacy, setShowPrivacy] = useState(false);
  const [showResetSuccess, setShowResetSuccess] = useState(false);
  const [resetEmail, setResetEmail] = useState('');

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsLoading(true);
    setError('');

    try {
      const formData = new FormData();
      formData.append('username', username);
      formData.append('password', password);

      const response = await fetch('http://localhost:8000/api/v1/auth/login', {
        method: 'POST',
        body: formData,
      });

      if (response.ok) {
        const data = await response.json();
        localStorage.setItem('access_token', data.access_token);
        localStorage.setItem('user', JSON.stringify(data.user));
        onLogin(data.user);
      } else {
        setError('ชื่อผู้ใช้หรือรหัสผ่านไม่ถูกต้อง');
      }
    } catch (error) {
      setError('เกิดข้อผิดพลาดในการเชื่อมต่อ');
    } finally {
      setIsLoading(false);
    }
  };

  const handleForgotPassword = () => {
    if (!resetEmail) {
      alert('กรุณากรอกอีเมล');
      return;
    }
    setShowForgotPassword(false);
    setShowResetSuccess(true);
    setResetEmail('');
  };

  const PopupOverlay = ({ show, onClose, children }: { show: boolean; onClose: () => void; children: React.ReactNode }) => {
    if (!show) return null;
    
    return (
      <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4" onClick={onClose}>
        <div className="bg-white rounded-2xl shadow-2xl max-w-lg w-full max-h-[80vh] overflow-hidden transform transition-transform" onClick={e => e.stopPropagation()}>
          {children}
        </div>
      </div>
    );
  };

  return (
    <>
      {/* Full Screen Background */}
      <div className="min-h-screen w-full flex flex-col" style={{
        background: 'linear-gradient(135deg, #1e3a8a 0%, #1e40af 25%, #2563eb 50%, #3b82f6 75%, #60a5fa 100%)'
      }}>
        
        {/* Header Section */}
        <div className="flex-none pt-12 pb-8 text-center">
          <div className="flex items-center justify-center gap-4 mb-6">
            <div className="bg-green-500 text-white w-16 h-16 rounded-2xl flex items-center justify-center text-3xl shadow-lg">
              <i className="fas fa-home"></i>
            </div>
            <div className="text-white text-3xl font-bold">Smart Village</div>
          </div>
          <h1 className="text-white text-4xl font-bold mb-3">Management Portal</h1>
          <p className="text-blue-100 text-lg">สำหรับผู้ดูแลระบบและผู้จัดการหมู่บ้าน</p>
        </div>

        {/* Main Content - Centered */}
        <div className="flex-1 flex items-center justify-center px-4 pb-12">
          <div className="bg-white rounded-3xl shadow-2xl w-full max-w-md p-8">
            
            {/* Form */}
            <form onSubmit={handleSubmit} className="space-y-6">
              
              {/* Username Field */}
              <div>
                <label className="block mb-3 font-semibold text-gray-700 text-base">ชื่อผู้ใช้งาน</label>
                <div className="relative">
                  <i className="fas fa-user absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 text-lg"></i>
                  <input
                    type="text"
                    value={username}
                    onChange={(e) => setUsername(e.target.value)}
                    className="w-full pl-12 pr-4 py-4 border-2 border-gray-200 rounded-xl text-base transition-all bg-gray-50 focus:outline-none focus:border-blue-500 focus:bg-white focus:shadow-lg"
                    placeholder="กรุณากรอกชื่อผู้ใช้งาน"
                    required
                  />
                </div>
              </div>

              {/* Password Field */}
              <div>
                <label className="block mb-3 font-semibold text-gray-700 text-base">รหัสผ่าน</label>
                <div className="relative">
                  <i className="fas fa-lock absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 text-lg"></i>
                  <input
                    type={showPassword ? "text" : "password"}
                    value={password}
                    onChange={(e) => setPassword(e.target.value)}
                    className="w-full pl-12 pr-12 py-4 border-2 border-gray-200 rounded-xl text-base transition-all bg-gray-50 focus:outline-none focus:border-blue-500 focus:bg-white focus:shadow-lg"
                    placeholder="กรุณากรอกรหัสผ่าน"
                    required
                  />
                  <i 
                    className={`fas ${showPassword ? 'fa-eye-slash' : 'fa-eye'} absolute right-4 top-1/2 transform -translate-y-1/2 text-gray-400 cursor-pointer hover:text-blue-500 text-lg`}
                    onClick={() => setShowPassword(!showPassword)}
                  ></i>
                </div>
              </div>

              {/* Remember Me */}
              <div className="flex items-center gap-3 py-2">
                <input 
                  type="checkbox" 
                  id="rememberMe" 
                  checked={rememberMe}
                  onChange={(e) => setRememberMe(e.target.checked)}
                  className="w-5 h-5 accent-blue-600" 
                />
                <label htmlFor="rememberMe" className="text-base text-gray-600 cursor-pointer">จดจำการเข้าสู่ระบบ</label>
              </div>

              {/* Error Message */}
              {error && (
                <div className="text-red-600 text-base text-center py-2 bg-red-50 rounded-lg">
                  {error}
                </div>
              )}

              {/* Login Button */}
              <button
                type="submit"
                disabled={isLoading}
                className="w-full text-white border-none py-4 rounded-xl text-lg font-semibold cursor-pointer transition-all disabled:opacity-60 disabled:cursor-not-allowed hover:transform hover:-translate-y-0.5 hover:shadow-xl"
                style={{
                  background: 'linear-gradient(135deg, #1e3a8a 0%, #2563eb 100%)'
                }}
              >
                {isLoading ? 'กำลังเข้าสู่ระบบ...' : 'เข้าสู่ระบบ'}
              </button>

              {/* Forgot Password Link */}
              <div className="text-center py-2">
                <button 
                  type="button"
                  onClick={() => setShowForgotPassword(true)}
                  className="text-blue-600 text-base font-medium hover:underline bg-none border-none cursor-pointer"
                >
                  ลืมรหัสผ่าน?
                </button>
              </div>

              {/* Terms and Privacy */}
              <div className="text-center text-sm text-gray-600 leading-relaxed pt-4">
                การเข้าสู่ระบบแสดงว่าคุณยอมรับ<br />
                <button 
                  type="button"
                  onClick={() => setShowTerms(true)}
                  className="text-blue-600 hover:underline bg-none border-none cursor-pointer"
                >
                  เงื่อนไขการใช้งาน
                </button> และ{' '}
                <button 
                  type="button"
                  onClick={() => setShowPrivacy(true)}
                  className="text-blue-600 hover:underline bg-none border-none cursor-pointer"
                >
                  นโยบายความเป็นส่วนตัว
                </button>
              </div>

            </form>

            {/* Footer */}
            <div className="mt-8 pt-6 text-center text-xs text-gray-500 border-t border-gray-200">
              <p>© 2025 Smart Village Management System</p>
              <p>Version 1.0.0</p>
            </div>
          </div>
        </div>
      </div>

      {/* Forgot Password Popup */}
      <PopupOverlay show={showForgotPassword} onClose={() => setShowForgotPassword(false)}>
        <div className="p-6 border-b border-gray-200 flex items-center justify-between">
          <h3 className="text-xl font-semibold text-gray-800 flex items-center gap-2">
            <i className="fas fa-key"></i>
            ลืมรหัสผ่าน
          </h3>
          <button onClick={() => setShowForgotPassword(false)} className="text-gray-400 hover:text-gray-600 text-2xl">
            <i className="fas fa-times"></i>
          </button>
        </div>
        <div className="p-6">
          <p className="text-gray-600 mb-5">กรุณากรอกอีเมลของคุณ เราจะส่งลิงก์สำหรับรีเซ็ตรหัสผ่านไปให้</p>
          <div className="mb-4">
            <label className="block mb-2 font-medium text-gray-700 text-sm">อีเมล</label>
            <div className="relative">
              <i className="fas fa-envelope absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
              <input
                type="email"
                value={resetEmail}
                onChange={(e) => setResetEmail(e.target.value)}
                className="w-full pl-12 pr-4 py-3 border-2 border-gray-200 rounded-xl bg-gray-50 focus:outline-none focus:border-blue-500 focus:bg-white"
                placeholder="กรุณากรอกอีเมลของคุณ"
              />
            </div>
          </div>
        </div>
        <div className="p-5 border-t border-gray-200 flex gap-3 justify-end">
          <button 
            onClick={() => setShowForgotPassword(false)}
            className="px-6 py-3 bg-gray-100 text-gray-600 rounded-lg font-medium hover:bg-gray-200"
          >
            ยกเลิก
          </button>
          <button 
            onClick={handleForgotPassword}
            className="px-6 py-3 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700"
          >
            ส่งลิงก์รีเซ็ต
          </button>
        </div>
      </PopupOverlay>

      {/* Reset Success Popup */}
      <PopupOverlay show={showResetSuccess} onClose={() => setShowResetSuccess(false)}>
        <div className="p-6 border-b border-gray-200 flex items-center justify-between">
          <h3 className="text-xl font-semibold text-gray-800 flex items-center gap-2">
            <i className="fas fa-check-circle"></i>
            ส่งลิงก์รีเซ็ตเรียบร้อย
          </h3>
          <button onClick={() => setShowResetSuccess(false)} className="text-gray-400 hover:text-gray-600 text-2xl">
            <i className="fas fa-times"></i>
          </button>
        </div>
        <div className="p-6 text-center">
          <div className="text-5xl text-green-500 mb-5">
            <i className="fas fa-check-circle"></i>
          </div>
          <p className="text-gray-600">เราได้ส่งลิงก์สำหรับรีเซ็ตรหัสผ่านไปยังอีเมลของคุณแล้ว กรุณาตรวจสอบอีเมลและทำตามขั้นตอนที่ระบุ</p>
        </div>
        <div className="p-5 border-t border-gray-200 flex justify-end">
          <button 
            onClick={() => setShowResetSuccess(false)}
            className="px-6 py-3 bg-green-500 text-white rounded-lg font-medium hover:bg-green-600"
          >
            ตกลง
          </button>
        </div>
      </PopupOverlay>

      {/* Terms Popup */}
      <PopupOverlay show={showTerms} onClose={() => setShowTerms(false)}>
        <div className="p-6 border-b border-gray-200 flex items-center justify-between">
          <h3 className="text-xl font-semibold text-gray-800 flex items-center gap-2">
            <i className="fas fa-file-contract"></i>
            เงื่อนไขการใช้งาน
          </h3>
          <button onClick={() => setShowTerms(false)} className="text-gray-400 hover:text-gray-600 text-2xl">
            <i className="fas fa-times"></i>
          </button>
        </div>
        <div className="p-6 max-h-96 overflow-y-auto">
          <div className="text-gray-700 leading-relaxed">
            <h4 className="font-semibold text-blue-600 mb-2">1. การยอมรับเงื่อนไข</h4>
            <p className="mb-4">การใช้งานระบบ Smart Village Management System แสดงว่าคุณยอมรับและตกลงที่จะปฏิบัติตามเงื่อนไขการใช้งานทั้งหมด</p>
            
            <h4 className="font-semibold text-blue-600 mb-2">2. การใช้งานระบบ</h4>
            <p className="mb-4">ผู้ใช้งานต้องใช้ระบบเพื่อวัตถุประสงค์ที่ถูกต้องตามกฎหมายเท่านั้น และไม่กระทำการใดๆ ที่อาจเป็นอันตรายต่อระบบ</p>
            
            <h4 className="font-semibold text-blue-600 mb-2">3. ความรับผิดชอบของผู้ใช้</h4>
            <ul className="list-disc ml-5 mb-4">
              <li>รักษาความปลอดภัยของชื่อผู้ใช้และรหัสผ่าน</li>
              <li>ไม่เปิดเผยข้อมูลส่วนตัวของผู้อื่น</li>
              <li>ใช้งานระบบด้วยความระมัดระวัง</li>
              <li>แจ้งผู้ดูแลระบบเมื่อพบปัญหาหรือข้อผิดพลาด</li>
            </ul>
          </div>
        </div>
        <div className="p-5 border-t border-gray-200 flex gap-3 justify-end">
          <button 
            onClick={() => setShowTerms(false)}
            className="px-6 py-3 bg-gray-100 text-gray-600 rounded-lg font-medium hover:bg-gray-200"
          >
            ปิด
          </button>
          <button 
            onClick={() => setShowTerms(false)}
            className="px-6 py-3 bg-green-500 text-white rounded-lg font-medium hover:bg-green-600"
          >
            ยอมรับ
          </button>
        </div>
      </PopupOverlay>

      {/* Privacy Popup */}
      <PopupOverlay show={showPrivacy} onClose={() => setShowPrivacy(false)}>
        <div className="p-6 border-b border-gray-200 flex items-center justify-between">
          <h3 className="text-xl font-semibold text-gray-800 flex items-center gap-2">
            <i className="fas fa-shield-alt"></i>
            นโยบายความเป็นส่วนตัว
          </h3>
          <button onClick={() => setShowPrivacy(false)} className="text-gray-400 hover:text-gray-600 text-2xl">
            <i className="fas fa-times"></i>
          </button>
        </div>
        <div className="p-6 max-h-96 overflow-y-auto">
          <div className="text-gray-700 leading-relaxed">
            <h4 className="font-semibold text-blue-600 mb-2">1. การเก็บรวบรวมข้อมูล</h4>
            <p className="mb-4">เราเก็บรวบรวมข้อมูลส่วนบุคคลที่จำเป็นสำหรับการให้บริการระบบจัดการหมู่บ้านอัจฉริยะเท่านั้น</p>
            
            <h4 className="font-semibold text-blue-600 mb-2">2. ประเภทข้อมูลที่เก็บรวบรวม</h4>
            <ul className="list-disc ml-5 mb-4">
              <li>ข้อมูลส่วนตัว (ชื่อ, นามสกุล, อีเมล, เบอร์โทรศัพท์)</li>
              <li>ข้อมูลการใช้งานระบบ</li>
              <li>ข้อมูลการเข้าสู่ระบบ</li>
              <li>ข้อมูลทรัพย์สินและการเงิน (เฉพาะที่เกี่ยวข้อง)</li>
            </ul>
            
            <h4 className="font-semibold text-blue-600 mb-2">3. วัตถุประสงค์การใช้ข้อมูล</h4>
            <ul className="list-disc ml-5 mb-4">
              <li>การให้บริการระบบจัดการหมู่บ้าน</li>
              <li>การติดต่อสื่อสารกับผู้ใช้งาน</li>
              <li>การปรับปรุงและพัฒนาระบบ</li>
              <li>การรักษาความปลอดภัยของระบบ</li>
            </ul>
          </div>
        </div>
        <div className="p-5 border-t border-gray-200 flex gap-3 justify-end">
          <button 
            onClick={() => setShowPrivacy(false)}
            className="px-6 py-3 bg-gray-100 text-gray-600 rounded-lg font-medium hover:bg-gray-200"
          >
            ปิด
          </button>
          <button 
            onClick={() => setShowPrivacy(false)}
            className="px-6 py-3 bg-green-500 text-white rounded-lg font-medium hover:bg-green-600"
          >
            เข้าใจแล้ว
          </button>
        </div>
      </PopupOverlay>

      {/* Loading Popup */}
      <PopupOverlay show={isLoading} onClose={() => {}}>
        <div className="p-10 text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-5"></div>
          <div className="text-gray-600 text-lg">กำลังเข้าสู่ระบบ...</div>
        </div>
      </PopupOverlay>
    </>
  );
};

export default Login;

